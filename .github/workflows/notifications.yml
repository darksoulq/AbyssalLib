name: Repository Notifications

on:
  push:
    branches: ["**"]
  pull_request:
    types: [opened, closed, reopened, merged]
  issues:
    types: [opened, closed, reopened]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  watch:
    types: [started]
  fork:

jobs:
  push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Format commit list
        id: commits
        run: |
          echo "COMMITS<<EOF" >> $GITHUB_ENV
          echo "$(jq -r '.commits[] | "- " + .id[0:7] + " " + .message + " (" + .author.name + ")"' <<< '${{ toJson(github.event.commits) }}')" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Send push notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_MAIN }}
        with:
          message: |
            **Push to `${{ github.repository }}`**
            Branch: `${{ github.ref_name }}`
            Pusher: `${{ github.actor }}`

            Commits:
            ${{ env.COMMITS }}

            Repository: https://github.com/${{ github.repository }}
            Compare: ${{ github.event.compare }}

  pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Send PR notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_PR }}
        with:
          message: |
            **Pull Request ${{ github.event.action }}**
            Repository: `${{ github.repository }}`
            PR: #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}
            Author: `${{ github.event.pull_request.user.login }}`
            URL: ${{ github.event.pull_request.html_url }}

  issue:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Send Issue notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_ISSUES }}
        with:
          message: |
            **Issue ${{ github.event.action }}**
            Repository: `${{ github.repository }}`
            Issue: #${{ github.event.issue.number }} ${{ github.event.issue.title }}
            Author: `${{ github.event.issue.user.login }}`
            URL: ${{ github.event.issue.html_url }}

  issue_comment:
    if: github.event_name == 'issue_comment'
    runs-on: ubuntu-latest
    steps:
      - name: Send Issue/PR comment notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_ISSUES }}
        with:
          message: |
            **New Comment**
            Repository: `${{ github.repository }}`
            On: #${{ github.event.issue.number }} ${{ github.event.issue.title }}
            Author: `${{ github.event.comment.user.login }}`
            URL: ${{ github.event.comment.html_url }}

            Comment:
            > ${{ github.event.comment.body }}

  pr_review_comment:
    if: github.event_name == 'pull_request_review_comment'
    runs-on: ubuntu-latest
    steps:
      - name: Send PR review comment notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_PR }}
        with:
          message: |
            **New Review Comment**
            Repository: `${{ github.repository }}`
            PR: #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}
            Author: `${{ github.event.comment.user.login }}`
            URL: ${{ github.event.comment.html_url }}

            Comment:
            > ${{ github.event.comment.body }}

  star:
    if: github.event_name == 'watch'
    runs-on: ubuntu-latest
    steps:
      - name: Send Star notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_MAIN }}
        with:
          message: |
            **New Star**
            Repository: `${{ github.repository }}`
            User: `${{ github.actor }}`
            Repository URL: https://github.com/${{ github.repository }}

  fork:
    if: github.event_name == 'fork'
    runs-on: ubuntu-latest
    steps:
      - name: Send Fork notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_MAIN }}
        with:
          message: |
            **New Fork**
            Repository: `${{ github.repository }}`
            User: `${{ github.actor }}`
            Forked To: https://github.com/${{ github.actor }}/$(basename ${{ github.repository }})
            Pusher: `${{ github.actor }}`

            Commits:
            ${{ env.COMMITS }}

            Repository: https://github.com/${{ github.repository }}
            Compare: ${{ github.event.compare }}

  pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Send PR notification
        uses: Ilshidur/action-discord@master
        with:
          webhook: ${{ secrets.DISCORD_PR }}
          message: |
            **Pull Request ${{ github.event.action }}**
            Repository: `${{ github.repository }}`
            PR: #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}
            Author: `${{ github.event.pull_request.user.login }}`
            URL: ${{ github.event.pull_request.html_url }}

  issue:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Send Issue notification
        uses: Ilshidur/action-discord@master
        with:
          webhook: ${{ secrets.DISCORD_ISSUES }}
          message: |
            **Issue ${{ github.event.action }}**
            Repository: `${{ github.repository }}`
            Issue: #${{ github.event.issue.number }} ${{ github.event.issue.title }}
            Author: `${{ github.event.issue.user.login }}`
            URL: ${{ github.event.issue.html_url }}

  issue_comment:
    if: github.event_name == 'issue_comment'
    runs-on: ubuntu-latest
    steps:
      - name: Send Issue/PR comment notification
        uses: Ilshidur/action-discord@master
        with:
          webhook: ${{ secrets.DISCORD_ISSUES }}
          message: |
            **New Comment**
            Repository: `${{ github.repository }}`
            On: #${{ github.event.issue.number }} ${{ github.event.issue.title }}
            Author: `${{ github.event.comment.user.login }}`
            URL: ${{ github.event.comment.html_url }}

            Comment:
            > ${{ github.event.comment.body }}

  pr_review_comment:
    if: github.event_name == 'pull_request_review_comment'
    runs-on: ubuntu-latest
    steps:
      - name: Send PR review comment notification
        uses: Ilshidur/action-discord@master
        with:
          webhook: ${{ secrets.DISCORD_PR }}
          message: |
            **New Review Comment**
            Repository: `${{ github.repository }}`
            PR: #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}
            Author: `${{ github.event.comment.user.login }}`
            URL: ${{ github.event.comment.html_url }}

            Comment:
            > ${{ github.event.comment.body }}

  star:
    if: github.event_name == 'watch'
    runs-on: ubuntu-latest
    steps:
      - name: Send Star notification
        uses: Ilshidur/action-discord@master
        with:
          webhook: ${{ secrets.DISCORD_MAIN }}
          message: |
            **New Star**
            Repository: `${{ github.repository }}`
            User: `${{ github.actor }}`
            Repository URL: https://github.com/${{ github.repository }}

  fork:
    if: github.event_name == 'fork'
    runs-on: ubuntu-latest
    steps:
      - name: Send Fork notification
        uses: Ilshidur/action-discord@master
        with:
          webhook: ${{ secrets.DISCORD_MAIN }}
          message: |
            **New Fork**
            Repository: `${{ github.repository }}`
            User: `${{ github.actor }}`
            Forked To: https://github.com/${{ github.actor }}/$(basename ${{ github.repository }})
