plugins {
    id 'java'
    id 'io.papermc.paperweight.userdev' version '2.0.0-beta.16'
    id 'maven-publish'
    id 'xyz.jpenilla.run-paper' version '2.3.1'
}

group = 'io.github.darksoulq'
version = '1.1.0'

def targetJavaVersion = 21

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()

    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }

    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    maven {
        name = "magmaguy-repo"
        url = "https://repo.magmaguy.com/releases"
    }

    maven {
        name = "andante-repo"
        url = "https://maven.andante.dev/releases/"
    }

    maven {
        name = "spongepowered"
        url = "https://repo.spongepowered.org/maven"
    }

    maven {
        name = "fabricmc"
        url = "https://maven.fabricmc.net/"
    }
}

dependencies {
    paperweight.paperDevBundle("1.21.5-R0.1-SNAPSHOT")
    compileOnly("com.magmaguy:ResourcePackManager:1.2.2")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset = 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

tasks.runServer {
    minecraftVersion("1.21.5")
}

// Include sources and javadoc JARs in build
artifacts {
    archives sourcesJar
    archives javadocJar
}

// Make build depend on javadoc
build.dependsOn javadoc

// GitHub Packages repository configuration
publishing {
    publications {
        gpr(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/darksoulq/AbyssalLib")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}